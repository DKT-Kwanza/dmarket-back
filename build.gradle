plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'org.sonarqube' version '4.4.1.3373'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

ext{
    snippetsDir = file('build/generated-snippets') // (5)
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExt // (2)
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'co.elastic.clients:elasticsearch-java'
	//implementation 'org.springframework.kafka:spring-kafka'
	//implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'co.elastic.apm:apm-agent-api:1.46.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	implementation 'com.auth0:java-jwt:3.18.1'
	//implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	//implementation 'org.springframework.kafka:spring-kafka'
	//implementation 'org.apache.kafka:kafka-streams'


	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	

	testImplementation 'org.mockito:mockito-core:3.12.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	//testImplementation 'org.springframework.kafka:spring-kafka-test'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3)
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (4)
	
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir // (6)
}
jacoco {
    toolVersion = "0.8.8"
}

test {
	ignoreFailures = true
	finalizedBy jacocoTestReport // 테스트 후 JaCoCo 리포트 생성
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}
sonarqube {
	properties {
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "squ_41e1412a77ea741d440f4dd0533054033c8a8ede"
		property "sonar.language", "java"
		property "sonar.encoding", "UTF-8"
	}
}
asciidoctor { 
    configurations 'asciidoctorExt' // (7)
    baseDirFollowsSourceFile() // (8)
    inputs.dir snippetsDir // (9)
    dependsOn test // (10)
}
asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')  // (11)
}
task copyDocument(type: Copy) { // (12)
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

