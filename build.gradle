plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'org.sonarqube' version '3.3'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	//implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	//implementation 'org.springframework.kafka:spring-kafka'
	//implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	testImplementation 'org.mockito:mockito-core:3.12.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	//testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
//jacoco {
//	toolVersion = "0.8.7"
//}
//
//test {
//	ignoreFailures = true
//	finalizedBy jacocoTestReport // 테스트 후 JaCoCo 리포트 생성
//}

//jacocoTestReport {
//	reports {
//		xml.required = true
//	}
//}
sonarqube {
	properties {
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "squ_41e1412a77ea741d440f4dd0533054033c8a8ede"
		property "sonar.language", "java"
		property "sonar.encoding", "UTF-8"
	}
}